package sci.travel_app.WalkTheBear.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import sci.travel_app.WalkTheBear.model.Entities.AppUser;
import sci.travel_app.WalkTheBear.model.misc.AppUserRole;
import sci.travel_app.WalkTheBear.repository.AppUserRepository;

@Controller
public class AppUserController {


    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private AppUserRepository userRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody
    String addNewUser(@RequestParam String userName, @RequestParam String password, @RequestParam String email, @RequestParam AppUserRole role) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        AppUser n = new AppUser();
        n.setUserName(userName);
        n.setPassword(password);
        n.setEmail(email);
        n.setRole(role);


        userRepository.save(n);
        return "Saved";
    }

//        @GetMapping(path = "/all")
//        public @ResponseBody
//        Iterable<AppUser> getAllUsers() {
//            // This returns a JSON or XML with the users
//
//            return "adduser";
//        }


    @GetMapping(value = "/greeting")

    public ModelAndView captureDetails() {
        ModelAndView mav = new ModelAndView("adduser");

        AppUser theuser = new AppUser();
        theuser.setUserName("fffff");
        theuser.setPassword("ffff");
        theuser.setEmail("ffff");
        theuser.setRole(AppUserRole.HOST);


        mav.addObject("theuser", theuser);
        return mav;
    }

}
